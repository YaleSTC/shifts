<%# This can be refactored with the data_object.data_entries virtual attribute %>
<div>
  <h2><%= link_to_if current_user.is_admin_of?(current_department), data_objects_table.first.name.pluralize, data_objects_table.first %></h2>
  <table id=<%= "data_objects_table_#{data_objects_table.first.id}" %> class="tablesorter">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
        <th>When Updated</th>
        <% data_objects_table.first.data_fields.each do |df| %>
          <th><%= df.name %></th>
        <% end %>
      </tr>
    </thead>
    <tbody>
    <% data_objects_table.second.each do |obj| %>
      <% entry = obj.data_entries.last.data_fields_with_contents unless obj.data_entries.empty? %>
    <tr>        
	<td><%= link_to obj.name, obj %></td>
        <td><%= obj.description %></td>
        <%unless obj.data_entries == [] %>
          <td><%= obj.data_entries.last.updated_at.strftime("%m-%d-%Y %-I:%M %p") %></td>
        <%else %>
          <td></td>
        <%end %>
        <% data_objects_table.first.data_fields.each do |df| %>
          <td>
            <%= entry[df.id.to_s] if entry %>
          </td>
        <% end %>
      </tr>
    <% end %>
    </tbody>
  </table>
</div>

<%= javascript_tag do %>
   id = '<%= data_objects_table.first.id %>';
<% end %>

<%= javascript_include_tag 'data_objects_table' %>
